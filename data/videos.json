[
  {
    "title": "Introduction",
    "videos": [
      {
        "name": "Command-line arguments",
        "id": "XcHGLiUU5GM"
      }
    ]
  },
  {
    "title": "C, Numbers, and Data Representation",
    "videos": [
      {
        "name": "Intro C: 1 Compiling and running",
        "id": "0UDUEWmHmTg"
      },
      {
        "name": "Intro C: 2 Addresses",
        "id": "6F6ko6qqU08"
      },
      {
        "name": "Intro C: 3 Pointers",
        "id": "ml77nxS62_I"
      },
      {
        "name": "Intro C: 4 Arrays",
        "id": "Ccz7W3Ou2ns"
      },
      {
        "name": "Intro C: 5 Strings",
        "id": "AZbcSCUK1iI"
      },
      {
        "name": "Intro C: 6 Pointer arithmetic",
        "id": "uxV6Qq456oU"
      },
      {
        "name": "Intro C: 7 for loops",
        "id": "10O1kdiMaLo"
      },
      {
        "name": "Numbers: 1 Integers",
        "id": "X-gi0L5TpXc"
      },
      {
        "name": "Numbers: 2 Logical and bitwise operations",
        "id": "2Qb6pVHZP3M"
      },
      {
        "name": "Numbers: 3 Overflow and coercions",
        "id": "EI5PjMHzONM"
      },
      {
        "name": "Numbers: 4 Floating point",
        "id": "9P1O9uT-jfU"
      },
      {
        "name": "Numbers: 5 Floating-point decoding examples",
        "id": "YBSRTwtyuks"
      },
      {
        "name": "Numbers: 6 Casts and strings",
        "id": "sSFoHdJNtPo"
      },
      {
        "name": "C: 7 Integer sizes in practice",
        "id": "jIyN05sGEPk"
      },
      {
        "name": "C: 8 Number and pointer pitfalls",
        "id": "oSLvPcexgxc"
      }
    ]
  },
  {
    "title": "Machine Model: Instruction Set Architecture",
    "videos": [
      {
        "name": "ISA 1: Assembly and machine code",
        "id": "MBYxnzE0WZk"
      },
      {
        "name": "ISA 2: History",
        "id": "uF7U2KNE2YE"
      },
      {
        "name": "ISA 3: Machine model",
        "id": "U6Hj75jyZM4"
      },
      {
        "name": "ISA 4: Compile, assemble, disassemble",
        "id": "chl9sPbAi7w"
      },
      {
        "name": "ISA 5: Link",
        "id": "9ivRoX-458I"
      },
      {
        "name": "ISA 6: Operand and register sizes",
        "id": "-oACD9ucgxY"
      },
      {
        "name": "ISA 7: Operand forms",
        "id": "DCfciMwHU7k"
      },
      {
        "name": "ISA 8: Practice decoding operands",
        "id": "Wo_QXCcOnz4"
      },
      {
        "name": "ISA 9: Move instructions",
        "id": "fRfb1DezDf8"
      },
      {
        "name": "ISA 10: Example using move instructions",
        "id": "oQ_afThEBoE"
      },
      {
        "name": "ISA 11: Arithmetic instructions",
        "id": "r7ebrQzqPRc"
      },
      {
        "name": "ISA 12: Example using arithmetic instructions",
        "id": "nIIXJqPeDJk"
      },
      {
        "name": "ISA 13: Reading ISA manuals",
        "id": "oe7tDlBaYcw"
      }
    ]
  },
  {
    "title": "Representing Control Flow",
    "videos": [
      {
        "name": "Control 1: Condition codes",
        "id": "cESKoKRiLWk"
      },
      {
        "name": "Control 2: Interpreting condition codes",
        "id": "hjxVpk3TciM"
      },
      {
        "name": "Control 3: setcc, cmpx, and testx",
        "id": "1VQUYvvgMWs"
      },
      {
        "name": "Control 4: Extended example for setcc",
        "id": "Dp0a6Yls6uc"
      },
      {
        "name": "Control 5: cmovccx",
        "id": "J9JVP0j1Ot4"
      },
      {
        "name": "Control 6: Jumps via jcc and jmp",
        "id": "0WmyNQSKJHY"
      },
      {
        "name": "Control 7: Alternative branch patterns",
        "id": "Ww5NYhuoeeI"
      },
      {
        "name": "Control 8: Additional branch example",
        "id": "k4pcl9aD_VA"
      },
      {
        "name": "Control 9: do–while loops",
        "id": "K-Y8MsOPnLI"
      },
      {
        "name": "Control 10: while loops",
        "id": "JVQ8_p8AU6k"
      },
      {
        "name": "Control 11: for loops",
        "id": "3x9C-nOYOQQ"
      },
      {
        "name": "Control 12: Another loop exercise",
        "id": "AHEXeWkqW3c"
      },
      {
        "name": "Control 13: switch and jump tables",
        "id": "dp1PtwxGnbY"
      },
      {
        "name": "Control 14: Compiler-generated jump tables",
        "id": "alY5VqxLDCc"
      }
    ]
  },
  {
    "title": "Representing Procedures",
    "videos": [
      {
        "name": "Procedure 1: Intro",
        "id": "oiUZltIFDlk"
      },
      {
        "name": "Procedure 2: C stack",
        "id": "yWTasUpmQj0"
      },
      {
        "name": "Procedure 3: Exposing the stack in C and gdb",
        "id": "CJ6J2T9VvSQ"
      },
      {
        "name": "Procedure 4: Stack frames support recursion",
        "id": "ueBmlUT1NXM"
      },
      {
        "name": "Procedure 5: callx and retx",
        "id": "NLS_1gUcIz4"
      },
      {
        "name": "Procedure 6: Arguments and result",
        "id": "i2lvXLWboug"
      },
      {
        "name": "Procedure 7: Preserved and temporary registers",
        "id": "eosj_KLXTdk"
      },
      {
        "name": "Procedure 8: ABIs",
        "id": "7p9EhGKFvyM"
      },
      {
        "name": "Procedure 9: Debugging and stack frames",
        "id": "EXxnDUDvhe0"
      },
      {
        "name": "Procedure 10: Using a frame pointer",
        "id": "JEiVz1WKmIo"
      },
      {
        "name": "Procedure 11: Stack layout summary",
        "id": "vEqt3TTQzrM"
      }
    ]
  },
  {
    "title": "Arrays",
    "videos": [
      {
        "name": "Array 1: Arrays and pointers",
        "id": "Y_1cvClvPFY"
      },
      {
        "name": "Array 2: Arrays as function arguments",
        "id": "p4y4RLtx6DU"
      },
      {
        "name": "Array 3: typedef",
        "id": "oxOcGFZNWEk"
      },
      {
        "name": "Array 4: Machine code examples",
        "id": "EAQm2CKrWdU"
      },
      {
        "name": "Array 5: Arrays of typedefs and arrays",
        "id": "gCQN2FI_V8M"
      },
      {
        "name": "Array 6: 2-Dimensional arrays",
        "id": "jAU4Hsf_obM"
      },
      {
        "name": "Array 7: Machine code for 2-D array access",
        "id": "tOixS9yQZlc"
      },
      {
        "name": "Array 8: Omitting dimensions for a 2-D array argument",
        "id": "YE9Htif74Iw"
      },
      {
        "name": "Array 9: Exercise: inferring array dimensions",
        "id": "EEm5SX8pkPA"
      }
    ]
  },
  {
    "title": "Structs",
    "videos": [
      {
        "name": "Struct 1: Declaring structs",
        "id": "dufLuQiLu58"
      },
      {
        "name": "Struct 2: Accessing struct fields",
        "id": "D2Xz8bJTVPY"
      },
      {
        "name": "Struct 3: Layout",
        "id": "J_XsqKKSJTQ"
      },
      {
        "name": "Struct 5: More on alignment",
        "id": "wazWr3mNKHU"
      },
      {
        "name": "Struct 6: Linked-list example",
        "id": "yxdMGZaN1qI"
      },
      {
        "name": "Struct 7: Another machine-code example",
        "id": "hAiC0LHDBJ8"
      },
      {
        "name": "Struct 8: Unions",
        "id": "M2JkyQsJRt8"
      },
      {
        "name": "Struct 9: #pragma pack",
        "id": "CMFA5S1PafE"
      }
    ]
  },
  {
    "title": "Optimization",
    "videos": [
      {
        "name": "Optimization 1: Overview",
        "id": "E7TzcC-kWm4"
      },
      {
        "name": "Optimization 2: Generally useful optimizations",
        "id": "Q-fB5AmoGq4"
      },
      {
        "name": "Optimization 3: Procedure call as an optimization blocker",
        "id": "IFedIn7P3nw"
      },
      {
        "name": "Optimization 4: Aliasing as an optimization blocker",
        "id": "jMW9OOAqUTw"
      },
      {
        "name": "Optimization 5: gcc and strlen",
        "id": "yfAP0BGWQqQ"
      },
      {
        "name": "Optimization 6: Vector example",
        "id": "1ktoBrHl748"
      }
    ]
  },
  {
    "title": "Optimization 2",
    "videos": [
      {
        "name": "Machine FP 1: Arithmetic instructions",
        "id": "_7i-tAQnfak"
      },
      {
        "name": "Machine FP 2: Vector operations",
        "id": "Tk9HXd_gTXI"
      },
      {
        "name": "Machine FP 3: History of x87 through AVX2",
        "id": "N8Vt6iKZlIg"
      },
      {
        "name": "Optimization 7: Superscalar processors",
        "id": "-aWwHV4A6rA"
      },
      {
        "name": "Optimization 8: Pipelined execution",
        "id": "XCrozavqgUk"
      },
      {
        "name": "Optimization 9: Loop unrolling",
        "id": "lXBJeSfAPww"
      },
      {
        "name": "Optimization 10: Reassociation",
        "id": "VOgnSeANbbY"
      },
      {
        "name": "Optimization 11: Throughput bounds",
        "id": "Y9KKOhXOc8w"
      },
      {
        "name": "Optimization 12: Unrolling more",
        "id": "tNm1LDSrhDc"
      },
      {
        "name": "Optimization 13: Branch prediction",
        "id": "gyAYXnxGxs8"
      }
    ]
  },
  {
    "title": "Cache",
    "videos": [
      {
        "name": "Cache 1: Overview",
        "id": "HGiMi_m98ek"
      },
      {
        "name": "Cache 2: Random vs. sequential",
        "id": "2QeNJuCclGw"
      },
      {
        "name": "Cache 3: Temporal locality",
        "id": "5EBaZ0iYr3w"
      },
      {
        "name": "Cache 4: Spatial locality",
        "id": "cc6GI6b0WGI"
      },
      {
        "name": "Cache 5: The memory mountain",
        "id": "2S-Or1HqtjE"
      },
      {
        "name": "Cache 6: Cache lookup",
        "id": "WR7uv549GiE"
      },
      {
        "name": "Cache 7: Lookup examples",
        "id": "Yw0xtpjqPuo"
      },
      {
        "name": "Cache 8: Replacement and writes",
        "id": "qLiTJGHzq0U"
      },
      {
        "name": "Cache 9: Predicting cache misses",
        "id": "DKuYGIFzEFE"
      },
      {
        "name": "Cache 10: Reducing cache misses",
        "id": "QGbLVIaKHKg"
      },
      {
        "name": "Cache 11: Matrix multiplication",
        "id": "UAX5sL6DEEU"
      },
      {
        "name": "Cache 12: Blocking",
        "id": "WMXC72A4nmA"
      }
    ]
  },
  {
    "title": "Linking",
    "videos": [
      {
        "name": "Linking 1: Overview",
        "id": "tlYjotGNG3M"
      },
      {
        "name": "Linking 2: Declarations and definitions",
        "id": "uSr-V41lNlQ"
      },
      {
        "name": "Linking 3: Weak and strong symbols",
        "id": "Jx5uWMYsgnA"
      },
      {
        "name": "Linking 4: #include",
        "id": "t_Z0ZQvks0Q"
      },
      {
        "name": "Linking 5: static declarations",
        "id": "RPJOfIYrK1g"
      },
      {
        "name": "Linking 6: Static libraries",
        "id": "gJhEn7AnB18"
      },
      {
        "name": "Linking 7: Using static libraries",
        "id": "svh6b0TPAXA"
      },
      {
        "name": "Linking 8: Shared libraries",
        "id": "uxodjgW5qAc"
      },
      {
        "name": "Linking 9: Installed libraries",
        "id": "VrE7vXrq_M4"
      },
      {
        "name": "Linking 10: dlopen",
        "id": "WiSgfVe46AM"
      },
      {
        "name": "Linking 11: Interposing via cpp",
        "id": "evP2DbfXKlE"
      },
      {
        "name": "Linking 12: Interposing via ld",
        "id": "OgRXCwntiqE"
      },
      {
        "name": "Linking 13: Interposing via LD_PRELOAD",
        "id": "ScEmlqWugk8"
      }
    ]
  },
  {
    "title": "ELF",
    "videos": [
      {
        "name": "ELF 1: Overview",
        "id": "BXjOC945w4w"
      },
      {
        "name": "ELF 2: Segments, sections, and headers",
        "id": "5-d8snK8RaA"
      },
      {
        "name": "ELF 3: Using readelf",
        "id": "enQHBGns7aA"
      },
      {
        "name": "ELF 4: Reading ELF programmatically",
        "id": "N1bT_DdgZfU"
      },
      {
        "name": "ELF 5: Offsets vs. addresses",
        "id": "2CmAMD4l_aQ"
      },
      {
        "name": "ELF 6: Objects and linking",
        "id": "JmMbNATm8Gs"
      },
      {
        "name": "ELF 7: Printing section names",
        "id": "Vx0qeTJgsTQ"
      },
      {
        "name": "ELF 8: Position-independent code",
        "id": "H4QutJQjuDE"
      },
      {
        "name": "ELF 9: Implementing PIC variables",
        "id": "DdTtuB1Itmc"
      },
      {
        "name": "ELF 10: Implementing PIC functions",
        "id": "RJ7duJg6VGs"
      },
      {
        "name": "ELF 11: Inspecting the symbol table",
        "id": "qsZc8Y1HCmw"
      },
      {
        "name": "ELF 12: Inspecting relocations",
        "id": "6ssYRGxWaSQ"
      },
      {
        "name": "ELF 13: Machine code section",
        "id": "fqEx3rFecTE"
      }
    ]
  },
  {
    "title": "Processes",
    "videos": [
      {
        "name": "Process 1: Control flow and kernel",
        "id": "DLjmmBekJn4"
      },
      {
        "name": "Process 2: Exception handling",
        "id": "THzCJIzVKb4"
      },
      {
        "name": "Process 3: Kinds of exceptions",
        "id": "Oq_NIQdEDCw"
      },
      {
        "name": "Process 4: The process abstraction",
        "id": "AETVcVmvPp4"
      },
      {
        "name": "Process 5: Concurrency",
        "id": "C3Q9JlMSovQ"
      },
      {
        "name": "Process 6: top and ps",
        "id": "BKJAdPU1fw4"
      },
      {
        "name": "Process 7: Process control and kill",
        "id": "4NGpppDOCTs"
      },
      {
        "name": "Process 8: getpid",
        "id": "frD1LH7PY-0"
      },
      {
        "name": "Process 9: System calls and error checking",
        "id": "LpU0pyEQwnQ"
      },
      {
        "name": "Process 10: Creating processes with fork",
        "id": "WUl_IpqCl70"
      },
      {
        "name": "Process 11: Process graphs",
        "id": "FwEHEbqn2pU"
      }
    ]
  },
  {
    "title": "More on Processes",
    "videos": [
      {
        "name": "Process 12: Waiting on a process",
        "id": "tgiV_VTUpuo"
      },
      {
        "name": "Process 13: PID recycling and reaping",
        "id": "DLJUwSjBapA"
      },
      {
        "name": "Process 14: Orphan processes and init",
        "id": "T0R40UiBOgY"
      },
      {
        "name": "Process 15: Waiting on multiple child processes",
        "id": "TSq0GJtsNo0"
      },
      {
        "name": "Process 16: Running a program with execve",
        "id": "OfTmwj14Xr4"
      },
      {
        "name": "Process 17: Runing a program as a new process",
        "id": "Z0lubR4I7jQ"
      }
    ]
  },
  {
    "title": "File Descriptors",
    "videos": [
      {
        "name": "File Descriptor 1: Overview",
        "id": "JvswqzSk0lc"
      },
      {
        "name": "File Descriptors 2: Example of reading a file",
        "id": "2IafYGOC1F4"
      },
      {
        "name": "File Descriptors 3: Pipes",
        "id": "Yn8ThRjQexI"
      },
      {
        "name": "File Descriptors 4: Pipes and EOF",
        "id": "7BvTMp7mdj0"
      },
      {
        "name": "File Descriptors 5: Pipes and write blocking",
        "id": "PTsI9M9qqFE"
      },
      {
        "name": "FIle Descriptors 6: Standard input, output, and error",
        "id": "fwoIwkA1vOA"
      },
      {
        "name": "File Descriptors 7: Redirecting via dup2",
        "id": "YsFAz6gBWy0"
      },
      {
        "name": "File Descriptors 8: Constructing pipelines",
        "id": "3vbdk1vRlTw"
      },
      {
        "name": "File Descriptors 9: Unix vs. Standard C",
        "id": "R8LwcUnwQB0"
      },
      {
        "name": "File Descriptors 10: Output buffer modes",
        "id": "W6NTALJsdiQ"
      }
    ]
  },
  {
    "title": "Signals",
    "videos": [
      {
        "name": "Signals 1: Polling with WNOHANG",
        "id": "lW-gGoKM2Bw"
      },
      {
        "name": "Signals 2: Introduction to signals",
        "id": "0eF2ngHfiUc"
      },
      {
        "name": "Signals 3: SIGCHLD example",
        "id": "DEGJDRs-z54"
      },
      {
        "name": "Signals 4: Process signal state",
        "id": "6f12TaG74wQ"
      },
      {
        "name": "Signals 5: Changing the signal mask",
        "id": "mRdtpAMBfgY"
      },
      {
        "name": "Signals 6: Signal-handling effects and volatile",
        "id": "bcXN58j444M"
      },
      {
        "name": "Signals 7: Signal handling as concurrency",
        "id": "UvPkjZp1d8I"
      },
      {
        "name": "Signals 8: Async-signal-safe",
        "id": "FrO5uhGEDwA"
      },
      {
        "name": "Signals 9: Signal handling and errno",
        "id": "yQVcbjpOS7Y"
      },
      {
        "name": "Signals 10: Guidelines for safe signal handlers",
        "id": "aOH6N0zK7BE"
      },
      {
        "name": "Signals 11: Waiting for a signal with sigsuspend",
        "id": "l1vg0LkwNOY"
      },
      {
        "name": "Signals 12: Stopped processes",
        "id": "j3kpytyCdo0"
      },
      {
        "name": "Signals 13: Process groups",
        "id": "6cRgedgBud8"
      }
    ]
  },
  {
    "title": "Virtual Memory",
    "videos": [
      {
        "name": "Virtual Memory 1: Virtual and physical addresses",
        "id": "Aruo4c_kG8I"
      },
      {
        "name": "Virtual Memory 2: Linux process layout",
        "id": "BCA2JKMNhV4"
      },
      {
        "name": "Virtual Memory 3: Memory as a cache for disk",
        "id": "PmKhER6rgzg"
      },
      {
        "name": "Virtual memory 4: Address translation",
        "id": "BOVtPpOUN6M"
      },
      {
        "name": "Virtual memory 5: Page hits, page faults, and the TLB",
        "id": "SQSrp8ZlG6w"
      },
      {
        "name": "Virtual memory 6: Mapped, writable, and executable pages",
        "id": "MPxNcPy3tLA"
      },
      {
        "name": "Virtual memory 7: Demonstrating page permissions",
        "id": "YbGT4S6r1v0"
      },
      {
        "name": "Virtual memory 8: mmap",
        "id": "Ph04-sLCT2I"
      },
      {
        "name": "Virtual memory 8b: munmap",
        "id": "ti32v9Bxt6w"
      },
      {
        "name": "Virtual memory 9: mprotect and SIGSEGV",
        "id": "9H0QTSKvvto"
      },
      {
        "name": "Virtual memory 10: Shared libraries",
        "id": "U23M-hWbIuk"
      },
      {
        "name": "Virtual memory 11: fork, copy-on-write, and MAP_SHARED",
        "id": "ha2CdDQ9Atk"
      }
    ]
  },
  {
    "title": "Memory Allocation",
    "videos": [
      {
        "name": "Malloc 1: Allocation via syscalls",
        "id": "T7wXKBADeXI"
      },
      {
        "name": "Malloc 2: Allocation via the C library",
        "id": "bAw2REUvw3w"
      },
      {
        "name": "Malloc 3: Allocator constraints and goals",
        "id": "0tbrlsDi1-Q"
      },
      {
        "name": "Malloc 4: Key allocator questions",
        "id": "ZqWT19ZMxYw"
      },
      {
        "name": "Malloc 5: Naive sbrk allocator",
        "id": "8A6b7xnHRFQ"
      },
      {
        "name": "Malloc 6: “Word” convention for diagrams",
        "id": "pX7c5EK1tfw"
      },
      {
        "name": "Malloc 7: Allocating pages in chunks",
        "id": "GVTpzBeBCKE"
      },
      {
        "name": "Malloc 8: Block headers",
        "id": "HZwIELFYB50"
      },
      {
        "name": "Malloc 9: Payload and block pointers",
        "id": "BsgsZmPylRg"
      },
      {
        "name": "Malloc 10: Implicit free list implementation",
        "id": "moU4dALuKic"
      },
      {
        "name": "Malloc 11: Coalescing unallocated blocks",
        "id": "jNzQBKDexdM"
      },
      {
        "name": "Malloc 12: Payload and footer pointers",
        "id": "RoZPT34UUBU"
      },
      {
        "name": "Malloc 13: Coalescing implementation",
        "id": "QWqvxk5vM4w"
      }
    ]
  },
  {
    "title": "More on Memory Allocation",
    "videos": [
      {
        "name": "Malloc 14: Improving performance and first-fit vs. best-fit",
        "id": "B7kub_E5t3Q"
      },
      {
        "name": "Malloc 15: Packing headers to reduce internal fragmentation",
        "id": "N7Hv0jqJiX0"
      },
      {
        "name": "Malloc 16: Header/footer sizes and alignment",
        "id": "VMEYhgmpHfw"
      },
      {
        "name": "Malloc 17: Avoiding footers in allocated blocks",
        "id": "dOwS9AYSfpI"
      },
      {
        "name": "Malloc 18: Explicit free lists",
        "id": "RfnRrfrr0ro"
      },
      {
        "name": "Malloc 19: Alternative free-list representations",
        "id": "69jVT9detWc"
      },
      {
        "name": "Malloc 20: Adapting an allocator to mmap",
        "id": "pcoIfzAwiis"
      },
      {
        "name": "Malloc 21: Segregated allocation",
        "id": "5pIag1omXyA"
      }
    ]
  },
  {
    "title": "Garbage Collection",
    "videos": [
      {
        "name": "GC 1: Introduction",
        "id": "YWzlNbXJxzs"
      },
      {
        "name": "GC 2: Reference counting",
        "id": "5KAhCdj1iPI"
      },
      {
        "name": "GC 3: Reference counting in pictures",
        "id": "lyfbgirW2ak"
      },
      {
        "name": "GC 4: Reference counting implementation",
        "id": "sbQQTT7MM0o"
      },
      {
        "name": "GC 5: Cycles",
        "id": "WhXUOKEPLBc"
      },
      {
        "name": "GC 6: Garbage collection",
        "id": "u2-0aSHCrgU"
      },
      {
        "name": "GC 7: Garbage collection in pictures",
        "id": "dfU7aN3WZzY"
      },
      {
        "name": "GC 8: Garbage collection implementation",
        "id": "RPiKgv3tiwA"
      },
      {
        "name": "GC 9: Conservative garbage collection",
        "id": "S-kStGbKGHQ"
      },
      {
        "name": "GC 10: Conservative garbage collection implementation",
        "id": "0_aq7juMEUg"
      },
      {
        "name": "GC 11: Two-space copying collector",
        "id": "cbUjUb_tFp4"
      },
      {
        "name": "GC 12: Two-space collection implementation",
        "id": "wjGFRbtOHSI"
      },
      {
        "name": "GC 13: Tags",
        "id": "6lExgWE0Bgo"
      },
      {
        "name": "GC 14: Miniature two-space example with tags",
        "id": "rHazkm9PPMQ"
      },
      {
        "name": "GC 15: Further GC topics",
        "id": "O_Gsb2WtMgI"
      }
    ]
  },
  {
    "title": "Networking",
    "videos": [
      {
        "name": "Network 1: Overview of TCP & UDP",
        "id": "KFyuGneWhJ4"
      },
      {
        "name": "Network 2: IP",
        "id": "qk_aYAFDSYU"
      },
      {
        "name": "Network 3: Protocol layers",
        "id": "Q4bbDR6zusY"
      },
      {
        "name": "Network 4: Naming and DNS",
        "id": "V1ktM51APEs"
      },
      {
        "name": "Network 5: More naming issues",
        "id": "P7cBNKntlIg"
      },
      {
        "name": "Network 6: getaddrinfo",
        "id": "KbnJFfE4zo0"
      },
      {
        "name": "Network 7: Implementing hostinfo",
        "id": "Uh74UZJX_8w"
      },
      {
        "name": "Network 8: UDP & TCP as layers over IP",
        "id": "ld5XlXxBw2M"
      },
      {
        "name": "Network 9: Sockets",
        "id": "PpHMwDUWGNA"
      },
      {
        "name": "Network 10: UDP lifecycle",
        "id": "bIaTDfZ5ti4"
      },
      {
        "name": "Network 11: UDP example",
        "id": "xymiSjT-djM"
      },
      {
        "name": "Network 12: Choosing a server network interface",
        "id": "JIHcej3K4qI"
      },
      {
        "name": "Network 13: More UDP",
        "id": "QjCDZCkpW4c"
      }
    ]
  },
  {
    "title": "More Networking",
    "videos": [
      {
        "name": "Network 14: TCP",
        "id": "t3QeiP5Bd1k"
      },
      {
        "name": "Network 15: TCP lifecycle",
        "id": "1jnWgrwlyTM"
      },
      {
        "name": "Network 15: TCP basic example",
        "id": "S_nf54gVHxs"
      },
      {
        "name": "Network 16: TCP improved examples",
        "id": "bQn2pyhIaxk"
      },
      {
        "name": "Network 17: Echo server",
        "id": "3sqlPQoTgCo"
      },
      {
        "name": "Network 18: HTTP and URLs",
        "id": "Q_19BccTzw4"
      },
      {
        "name": "Network 19: Encoding in URLs",
        "id": "AF2UXqluJxE"
      },
      {
        "name": "Network 20: HTTP client side",
        "id": "Pj044fE-dDA"
      },
      {
        "name": "Network 21: HTTP server side",
        "id": "47yHn0RuvWA"
      },
      {
        "name": "Network 22: HTTP POST and headers",
        "id": "wdutlNdO0qE"
      },
      {
        "name": "Network 23: The TINY web server",
        "id": "esN8VLXSjc8"
      },
      {
        "name": "Network 24: TINY web server implementation",
        "id": "rkZzOZfV9ok"
      }
    ]
  },
  {
    "title": "Concurrency",
    "videos": [
      {
        "name": "Concurrency 1: Making the echo server concurrent",
        "id": "d5PAlDx3EUg"
      },
      {
        "name": "Concurrency 2: Processes via fork",
        "id": "nMcq71T-Zjs"
      },
      {
        "name": "Concurrency 3: Running and stressing a concurrent server",
        "id": "1Jm1N2VBcTI"
      },
      {
        "name": "Concurrency 4: Processes and cooperation",
        "id": "cswKaS7MWSw"
      },
      {
        "name": "Concurrency 5: Threads",
        "id": "Nwh0mcc9PBw"
      },
      {
        "name": "Concurrency 6: Thread example",
        "id": "aBHcwDz9zak"
      },
      {
        "name": "Concurrency 7: Waiting for a thread to complete",
        "id": "Pf9JA11q02M"
      },
      {
        "name": "Concurrency 8: Threads as peers",
        "id": "pU3z1pg_2RA"
      },
      {
        "name": "Concurrency 9: Detaching a thread",
        "id": "m9K5QKEquyo"
      },
      {
        "name": "Concurrency 10: Concurrent echo with threads",
        "id": "m2rrI5wdX0U"
      },
      {
        "name": "Concurrency 11: Multiplexing I/O with select",
        "id": "faaSHiblXuI"
      },
      {
        "name": "Concurrency 12: Concurrent echo with events",
        "id": "ztISP_jDfr0"
      },
      {
        "name": "Concurrency 13: Recap of concurrency options",
        "id": "N80jEpuYC9U"
      }
    ]
  },
  {
    "title": "Synchronization",
    "videos": [
      {
        "name": "Synchronization 1: Counting in the echo server",
        "id": "LWsUoGzA_zE"
      },
      {
        "name": "Synchronization 2: Non-atomic read–update–write",
        "id": "dE5Uyw0nrTQ"
      },
      {
        "name": "Synchronization 3: Multiple processing cores",
        "id": "nLU51fdWTeI"
      },
      {
        "name": "Synchronization 4: Problem summary and solutions",
        "id": "JA6aw7du1dU"
      },
      {
        "name": "Synchronization 5: Compare and swap",
        "id": "1U0Ac5omSKU"
      },
      {
        "name": "Synchronization 6: Locks",
        "id": "MxBRXVEAFVE"
      },
      {
        "name": "Synchronization 7: Example lock APIs",
        "id": "8oc_GnEvnjk"
      },
      {
        "name": "Synchronization 8: Semaphore API and example",
        "id": "lxLZyjJn8hQ"
      },
      {
        "name": "Synchronization 9: Echo counter with semaphores",
        "id": "A8kS6XlVVmU"
      },
      {
        "name": "Synchronization 10: Per-object semaphores",
        "id": "3RqDKrEpAYg"
      },
      {
        "name": "Synchronization 11: Thread-safe queue design",
        "id": "tiXDFeAX_oQ"
      },
      {
        "name": "Synchronization 12: Echo server with work queue",
        "id": "4Fn_Cqpi8sk"
      },
      {
        "name": "Synchronization 13: Thread-safe library functions",
        "id": "iOL63Rzeacc"
      },
      {
        "name": "Synchronization 14: Concurrency vs. parallelism",
        "id": "oW6jq11lrp8"
      }
    ]
  }
]
